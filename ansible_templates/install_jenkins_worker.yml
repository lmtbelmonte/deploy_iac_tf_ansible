---
- hosts: "{{passed_in_hosts}}"
  become: yes
  remote_user: ec2-user
  become_user: root
  tasks:
    - name: Generar el par de claves ssh
      openssh_keypair:
        path: /home/ec2-user/.ssh/id_rsa
        type: rsa
        size: 2048
        group: ec2-user
        owner: ec2-user

    - name: Añadimos nuestra propia clave al authorized_keys
      shell: "cat /home/ec2-user/.ssh/id_rsa.pub >> /home/ec2-user/.ssh/authorized_keys && chmod 600 /home/ec2-user/.ssh/authorized_keys"

    - name: copiamos el template de jinja a al jenkins worker
      vars: 
        ipv4: "{{ ansible_default_ipv4.address }}"
      template:
        src: node.j2
        dest: /home/ec2-user/node.xml
        owner: ec2-user
        mode: '644'  

    - name: Hay que leer la clave privada id_rsa
      slurp:
        src: /home/ec2-user/.ssh/id_rsa
      register: pkey

    - name: Copiar creds.xml y creamos los credenciales para jenkins
      vars:
        priv_key: "{{ pkey['content'] | b64decode }}"
        ipv4: "{{ ansible_default_ipv4.address }}"
      template:
        src: cred-privkey.j2
        dest: /home/ec2-user/creds.xml

    - name: Instalamos las dependencias
      yum:
        name: "{{ package }}"
      vars:
        package:
        - wget
        - java-1.8.0-openjdk-devel
        - git

    - name: Cargamos el jar file del Jenkins cli
      vars:
        master: "{{ master_ip }}"
      get_url:
        url: "http://{{ master }}:8080/jnlpjars/jenkins-cli.jar"
        dest: /home/ec2-user/jenkins-cli.jar
        force: yes
      register: download
      ignore_errors: yes
      until: download.status_code|default(200) == 200
      retries: 5
      delay: 5

    - name: cambio permisos añadir ejecucion jenkins-cli.jar
      file:
        path: /home/ec2-user/jenkins-cli.jar
        owner: ec2-user
        group: ec2-user
        mode: '0700'

    - name: Colocamos el Auth file de Jenkins en su sitio
      copy:
        src: jenkins_auth
        dest: /home/ec2-user/
        owner: ec2-user
        mode: '0600'    
    
    - name: creamos los credenciales de jenkins
      vars:
        master: "{{ master_ip }}"
      shell: "cat /home/ec2-user/creds.xml | java -jar /home/ec2-user/jenkins-cli.jar -auth @/home/ec2-user/jenkins_auth -s http://{{master}}:8080 create-credentials-by-xml system::system::jenkins _"

    - name: Registramos el nodo como worker
      vars:
        master: "{{ master_ip }}"
      shell: 'cat /home/ec2-user/node.xml | java -jar /home/ec2-user/jenkins-cli.jar -auth @/home/ec2-user/jenkins_auth -s http://{{ master }}:8080 create-node' 
